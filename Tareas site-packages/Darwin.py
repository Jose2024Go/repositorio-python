import tkinter as tk
from tkinter import messagebox


# Definición de las clases Autor, Libro y Biblioteca
class Autor:
    def _init_(self, nombre, apellidos):
        self.Nombre = nombre
        self.Apellidos = apellidos

    def MostrarAutor(self):
        print("Autor:", self.Nombre, self.Apellidos)


class Libro:
    def _init_(self, titulo, isbn, autor=None):
        self.Titulo = titulo
        self.ISBN = isbn
        self.Autor = autor

    def AñadirAutor(self, autor):
        self.Autor = autor

    def MostrarLibro(self):
        print("------ Libro ------")
        print("Título:", self.Titulo)
        print("ISBN:", self.ISBN)
        if self.Autor:
            self.Autor.MostrarAutor()
        print("-------------------")


class Biblioteca:
    def _init_(self):
        self.ListaLibros = []

    def AñadirLibro(self, libro):
        self.ListaLibros.append(libro)

    def MostrarBiblioteca(self):
        print("########################################")
        for item in self.ListaLibros:
            item.MostrarLibro()
        print("########################################")

    def BorrarLibro(self, titulo):
        encontrado = False
        posicionaborrar = -1
        for item in self.ListaLibros:
            posicionaborrar += 1
            if item.Titulo.lower() == titulo.lower():  # Comparación insensible a mayúsculas
                encontrado = True
                break
        if encontrado:
            del self.ListaLibros[posicionaborrar]
            print("¡Libro borrado correctamente!")
        else:
            print("¡Libro no encontrado!")


# Interfaz gráfica de usuario (GUI) con Tkinter
def mostrar_menu():
    menu = tk.Tk()
    menu.title("Biblioteca")
    menu.configure(bg="lightblue")  # Configurar color de fondo de la ventana

    # Función para añadir libro desde la GUI
    def añadir_libro():
        titulo = entrada_titulo.get()
        isbn = entrada_isbn.get()
        nombre_autor = entrada_nombre_autor.get()
        apellido_autor = entrada_apellido_autor.get()

        try:
            autor = Autor(nombre_autor, apellido_autor)
            libro = Libro(titulo, isbn, autor)
            biblioteca.AñadirLibro(libro)
            messagebox.showinfo("Éxito", "Libro añadido exitosamente.", parent=menu)
        except Exception as e:
            messagebox.showerror("Error", str(e), parent=menu)

    # Componentes de la GUI (etiquetas, entradas y botones)
    etiqueta_titulo = tk.Label(menu, text="Título del libro:", bg="white", fg="black")
    etiqueta_titulo.grid(row=0, column=0)
    entrada_titulo = tk.Entry(menu, bg="white", fg="black")
    entrada_titulo.grid(row=0, column=1)

    etiqueta_isbn = tk.Label(menu, text="ISBN del libro:", bg="white", fg="black")
    etiqueta_isbn.grid(row=1, column=0)
    entrada_isbn = tk.Entry(menu, bg="white", fg="black")
    entrada_isbn.grid(row=1, column=1)

    etiqueta_nombre_autor = tk.Label(menu, text="Nombre del autor:", bg="white", fg="black")
    etiqueta_nombre_autor.grid(row=2, column=0)
    entrada_nombre_autor = tk.Entry(menu, bg="white", fg="black")
    entrada_nombre_autor.grid(row=2, column=1)

    etiqueta_apellido_autor = tk.Label(menu, text="Apellido del autor:", bg="white", fg="black")
    etiqueta_apellido_autor.grid(row=3, column=0)
    entrada_apellido_autor = tk.Entry(menu, bg="white", fg="black")
    entrada_apellido_autor.grid(row=3, column=1)

    boton_añadir = tk.Button(menu, text="Añadir libro", command=añadir_libro, bg="green", fg="white")
    boton_añadir.grid(row=4, columnspan=2)

    boton_mostrar = tk.Button(menu, text="Mostrar biblioteca", command=lambda: biblioteca.MostrarBiblioteca(),
                              bg="orange", fg="white")
    boton_mostrar.grid(row=5, columnspan=2)

    boton_borrar = tk.Button(menu, text="Borrar libro", command=lambda: borrar_libro(entrada_titulo.get()), bg="red",
                             fg="white")
    boton_borrar.grid(row=6, columnspan=2)

    # Función para mostrar la biblioteca desde la GUI
    def borrar_libro(titulo):
        biblioteca.BorrarLibro(titulo)

    menu.mainloop()


# Inicialización de la biblioteca
biblioteca = Biblioteca()

# Mostrar la interfaz gráfica de usuario
mostrar_menu()