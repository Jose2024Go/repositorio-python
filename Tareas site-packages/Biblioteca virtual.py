import tkinter as tk
from tkinter import messagebox
from PIL import ImageTk, Image

# Asegúrate de tener una lista para almacenar los libros
lista_libros = []

def acerca_de():
    messagebox.askquestion("Acerca de", "Desarrollado por Daniel, Jose, Anthony, Darwin, Jhon y James")

def salir():
    resp = messagebox.askquestion("Salir", "¿Desea salir?")
    if resp == 'yes':
        ventana.destroy()

def mostrar_biblioteca():
    lista_libros_str = "\n".join(lista_libros)
    messagebox.showinfo("Biblioteca", f"Libros registrados:\n{lista_libros_str}")

def borrar_libro():
    libro_a_borrar = simpledialog.askstring("Borrar libro", "Ingrese el título del libro a borrar:")
    libros_borrados = [libro for libro in lista_libros if libro_a_borrar not in libro]
    if len(libros_borrados) < len(lista_libros):
        messagebox.showinfo("Borrar", f"El libro '{libro_a_borrar}' ha sido borrado.")
        lista_libros[:] = libros_borrados
    else:
        messagebox.showinfo("Borrar", "Libro no encontrado.")

def numero_libros():
    cantidad = len(lista_libros)
    messagebox.showinfo("Número de libros", f"Total de libros registrados: {cantidad}")

def ventana_añadir():
    v1 = tk.Toplevel(ventana)
    v1.title("Añadir libro")
    v1.geometry("250x250")
    v1.configure(bg="white")

    etiqueta_titulo = tk.Label(v1, text="Título del libro:", bg="white", fg="black")
    etiqueta_titulo.grid(row=0, column=0)
    entrada_titulo = tk.Entry(v1, bg="white", fg="black")
    entrada_titulo.grid(row=0, column=1)

    etiqueta_nombre_autor = tk.Label(v1, text="Nombre del autor:", bg="white", fg="black")
    etiqueta_nombre_autor.grid(row=1, column=0)
    entrada_nombre_autor = tk.Entry(v1, bg="white", fg="black")
    entrada_nombre_autor.grid(row=1, column=1)

    etiqueta_apellido_autor = tk.Label(v1, text="Apellido del autor:", bg="white", fg="black")
    etiqueta_apellido_autor.grid(row=2, column=0)
    entrada_apellido_autor = tk.Entry(v1, bg="white", fg="black")
    entrada_apellido_autor.grid(row=2, column=1)

    etiqueta_isbn = tk.Label(v1, text="ISBN del libro:", bg="white", fg="black")
    etiqueta_isbn.grid(row=3, column=0)
    entrada_isbn = tk.Entry(v1, bg="white", fg="black")
    entrada_isbn.grid(row=3, column=1)

    def libroBiblioteca():
        titulo2 = f'Titulo: {entrada_titulo.get()}'
        titulo3 = f'Autor: {entrada_nombre_autor.get()} {entrada_apellido_autor.get()}'
        titulo4 = f'ISBN: {entrada_isbn.get()}'
        libro = f"{entrada_titulo.get()} ({entrada_nombre_autor.get()} {entrada_apellido_autor.get()}) - ISBN: {entrada_isbn.get()}"
        lista_libros.append(libro)  # Agregar el libro a la lista
        messagebox.showinfo("Resultado", f"La información del libro es:\n{titulo2}\n{titulo3}\n{titulo4}")

    btn1 = tk.Button(v1, text="Añadir libro", command=libroBiblioteca)
    btn1.grid(row=4, columnspan=2)

ventana = tk.Tk()
ventana.title("Biblioteca virtual")
ventana.geometry("1060x566")

fondo = ImageTk.PhotoImage(file='C:/CURSOS PYTHON/ejercicios/pythonProject1/sistemas.gif')
fondo1 = tk.Label(ventana, image=fondo)
fondo1.place(x=0, y=0)

barra_menu = tk.Menu(ventana)
ventana.config(menu=barra_menu)

Inicio = tk.Menu(barra_menu, tearoff=0)
barra_menu.add_cascade(label="Inicio", menu=Inicio)
Inicio.add_command(label="Cerrar", command=salir)

Opciones = tk.Menu(barra_menu, tearoff=0)
barra_menu.add_cascade(label="Opciones", menu=Opciones)
Opciones.add_command(label="Añadir libros a la biblioteca", command=ventana_añadir)
Opciones.add_command(label="Mostrar biblioteca", command=mostrar_biblioteca)
Opciones.add_command(label="Borrar libro", command=borrar_libro)
Opciones.add_command(label="Número de libros", command=numero_libros)

Ayuda = tk.Menu(barra_menu, tearoff=0)
barra_menu.add_cascade(label="Ayuda", menu=Ayuda)
Ayuda.add_command(label="Datos", command=acerca_de)

ventana.mainloop()
